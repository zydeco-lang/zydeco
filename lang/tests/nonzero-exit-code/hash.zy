main
  do h <- ! hash_new @(Int) @(String) int_lt int_eq str_eq;
  do h <- ! hash_insert @(Int) @(String) 1 "one" h;
  do h <- ! hash_insert @(Int) @(String) 2 "two" h;
  do h <- ! hash_insert @(Int) @(String) 3 "three" h;
  do h <- ! hash_insert @(Int) @(String) 4 "four" h;
  do h <- ! hash_insert @(Int) @(String) 5 "five" h;
  do h <- ! hash_insert @(Int) @(String) 6 "six" h;
  do h <- ! hash_insert @(Int) @(String) 7 "seven" h;
  do h <- ! hash_insert @(Int) @(String) 8 "eight" h;
  do h <- ! hash_insert @(Int) @(String) 9 "nine" h;
  do h <- ! hash_insert @(Int) @(String) 10 "ten" h;

  # answer
  do h1 <- ! hash_new @(Int) @(String) int_lt int_eq str_eq;
  do h1 <- ! hash_insert @(Int) @(String) 1 "one change" h1;
  do h1 <- ! hash_insert @(Int) @(String) 2 "two" h1;
  do h1 <- ! hash_insert @(Int) @(String) 3 "three" h1;
  do h1 <- ! hash_insert @(Int) @(String) 4 "four change" h1;
  do h1 <- ! hash_insert @(Int) @(String) 7 "seven" h1;
  do h1 <- ! hash_insert @(Int) @(String) 8 "eight" h1;
  do h1 <- ! hash_insert @(Int) @(String) 9 "nine" h1;
  do h1 <- ! hash_insert @(Int) @(String) 10 "ten change" h1;

  # start deleting, changing and searching
  do h <- ! hash_delete @(Int) @(String) 5 "default" h;
  do h <- ! hash_delete @(Int) @(String) 6 "default" h;
  do h <- ! hash_change @(Int) @(String) 1 "one change" h;
  do h <- ! hash_change @(Int) @(String) 4 "four change" h;
  do h <- ! hash_change @(Int) @(String) 10 "ten change" h;
  do b <- ! hash_equal @(Int) @(String) h h1;
  do v1 <- ! hash_search @(Int) @(String) 1 "default" h;
  do v2 <- ! hash_search @(Int) @(String) 1 "default" h;
  match v1
  | +None() -> ! exit 1
  | +Some(v1) -> 
      match v2
      | +None() -> ! exit 1
      | +Some(v2) -> 
        do b2 <- ! str_eq v1 v2;
        do b <- ! and b b2;
        match b
        | +True() -> ! exit 0
        | +False() -> ! exit 1
        end
      end
  end
end

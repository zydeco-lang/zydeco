-- Function Types and the abort example

-- Funciton Type
codata Fn (A: VType) (B: CType) where
  | .push (arg: A) : B
end

-- Function Type with Optional Argument
codata FnOpt (A: VType) (B: CType) where
  | .some (arg: A) : B
  | .none          : B
end

-- Variadic Function Type
codata FnVar (A: VType) (B: CType) where
  | .more (arg: A) : FnVar A B
  | .done          : B
end


-- Abort that takes the first argument and removes the rest
def ! abort : forall (A: VType) . A -> FnVar A (Ret A) =
  fn A -> fn x -> fix unwind ->
  comatch
  | .more _ -> ! unwind
  | .done -> ret x
  end
end

main
  do i <- ! abort Int 0 .more 1 .more 2 .done;
  ! exit i
end

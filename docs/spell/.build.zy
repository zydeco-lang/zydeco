alias GuardResult = Pair String Bool end

-- checks if line starts with "-- " and remove it
def ! guard (line : String) : Ret GuardResult =
  let ! bind (b : Bool) (b~ : Thunk (Ret Bool)) : Ret Bool =
    ! if (Ret Bool) b b~ { ret b }
  in
  do l <- ! str_length line;
  let ifp~ = { ! if~ (Ret GuardResult) } in
  ! ifp~ { ! int_lt l 3 } {
    ret +Cons(line, false)
  } {
    -- can index into
    do c1 <- ! str_index line 0;
    do c2 <- ! str_index line 1;
    do c3 <- ! str_index line 2;
    do p? <- ! str_split_n line 3;
    match p?
    | +Some(p) ->
      match p
      | +Cons(_, line') ->
        do b1 <- ! bind true { ! char_eq c1 '-' };
        do b2 <- ! bind b1 { ! char_eq c2 '-' };
        do b3 <- ! bind b2 { ! char_eq c3 ' ' };
        ! if (Ret GuardResult) b3 {
          ret +Cons(line', true)
        } {
          ret +Cons(line, false)
        }
      end
    | +None() -> 
      ret +Cons(line, false)
    end
  }
end

def ! str_empty? (s : String) : Ret Bool =
  do l <- ! str_length s;
  ! int_eq l 0
end

main
  let fix loop (rest : String) (code : Bool) : OS =
    do p? <- ! str_split_once rest '\n';
    match p?
    | +Some(p) ->
      match p
      | +Cons(line, r) ->
        do p <- ! guard line;
        match p
        | +Cons(res, comment_head) ->
          ! if~ OS { ! not code } {
            -- normal mode:
            do empty? <- ! str_empty? res;
            ! if OS empty? {
              ! write_str "\n\n" {
              ! loop r code }
            } {
              ! if OS comment_head {
                -- if starts with "-- " then remove it and output the line
                ! write_str res {
                ! write_str " " {
                ! loop r code } }
              } {
                -- if not, output "```" and output the line and switch mode
                ! write_str "\n```haskell\n" {
                ! write_str res {
                ! loop r true } }
              }
            }
          } {
            -- code mode:
            do empty? <- ! str_empty? res;
            ! if OS empty? {
              ! write_str "\n" {
              ! loop r code }
            } {
              ! if OS comment_head {
                -- if starts with "-- " then output "```", remove, output and switch mode
                ! write_str "```\n\n" {
                ! write_str res {
                ! write_str " " {
                ! loop r false } } }
              } {
                -- if not, output the line
                ! write_str "\n" {
                ! write_str res {
                ! loop r code } }
              }
            }
          }
        end
      end
    | +None() ->
      ! exit 0
    end
  in
  ! read_till_eof { fn file ->
    ! loop file false
  }
end

#compdef zydeco

autoload -U is-at-least

_zydeco() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_zydeco_commands" \
"*::: :->zydeco-cli" \
&& ret=0
    case $state in
    (zydeco-cli)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:zydeco-command-$line[1]:"
        case $line[1] in
            (run)
_arguments "${_arguments_options[@]}" \
'--dry[Dry run (don'\''t execute)]' \
'-v[Level of verbosity]' \
'--verbose[Level of verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'*::files -- Path to the file to run:_files' \
&& ret=0
;;
(check)
_arguments "${_arguments_options[@]}" \
'-v[Level of verbosity]' \
'--verbose[Level of verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'*::files -- Path to the file to check:_files' \
&& ret=0
;;
(repl)
_arguments "${_arguments_options[@]}" \
'-v[Level of verbosity]' \
'--verbose[Level of verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_zydeco__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:zydeco-help-command-$line[1]:"
        case $line[1] in
            (run)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(check)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(repl)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_zydeco_commands] )) ||
_zydeco_commands() {
    local commands; commands=(
'run:Run a zydeco program' \
'check:Check a zydeco program' \
'repl:Start a REPL' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'zydeco commands' commands "$@"
}
(( $+functions[_zydeco__check_commands] )) ||
_zydeco__check_commands() {
    local commands; commands=()
    _describe -t commands 'zydeco check commands' commands "$@"
}
(( $+functions[_zydeco__help__check_commands] )) ||
_zydeco__help__check_commands() {
    local commands; commands=()
    _describe -t commands 'zydeco help check commands' commands "$@"
}
(( $+functions[_zydeco__help_commands] )) ||
_zydeco__help_commands() {
    local commands; commands=(
'run:Run a zydeco program' \
'check:Check a zydeco program' \
'repl:Start a REPL' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'zydeco help commands' commands "$@"
}
(( $+functions[_zydeco__help__help_commands] )) ||
_zydeco__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'zydeco help help commands' commands "$@"
}
(( $+functions[_zydeco__help__repl_commands] )) ||
_zydeco__help__repl_commands() {
    local commands; commands=()
    _describe -t commands 'zydeco help repl commands' commands "$@"
}
(( $+functions[_zydeco__repl_commands] )) ||
_zydeco__repl_commands() {
    local commands; commands=()
    _describe -t commands 'zydeco repl commands' commands "$@"
}
(( $+functions[_zydeco__help__run_commands] )) ||
_zydeco__help__run_commands() {
    local commands; commands=()
    _describe -t commands 'zydeco help run commands' commands "$@"
}
(( $+functions[_zydeco__run_commands] )) ||
_zydeco__run_commands() {
    local commands; commands=()
    _describe -t commands 'zydeco run commands' commands "$@"
}

if [ "$funcstack[1]" = "_zydeco" ]; then
    _zydeco "$@"
else
    compdef _zydeco zydeco
fi
